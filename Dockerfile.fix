FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Update pip first
RUN pip install --upgrade pip

# Install system dependencies required for Playwright and SSH
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    ca-certificates \
    libnss3 \
    libnspr4 \
    libdbus-1-3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libgtk-3-0 \
    libgbm1 \
    libasound2 \
    openssh-client \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first to leverage Docker cache
COPY requirements.txt .

# Install Python dependencies with fallback
RUN pip install --no-cache-dir -r requirements.txt || \
    (echo "Trying alternative requirements..." && \
     pip install fastapi uvicorn[standard] pydantic pydantic-settings \
     playwright httpx python-multipart aiofiles beautifulsoup4 \
     paramiko cryptography)

# Install Playwright system dependencies with fallback
RUN playwright install-deps chromium 2>/dev/null || \
    (echo "Warning: Some Playwright dependencies failed to install. Browser may work with limited functionality." && \
     apt-get update && apt-get install -y \
     fonts-liberation \
     libappindicator3-1 \
     libasound2 \
     libatk-bridge2.0-0 \
     libdrm2 \
     libgtk-3-0 \
     libnspr4 \
     libnss3 \
     libx11-xcb1 \
     libxtst6 \
     xdg-utils \
     2>/dev/null || true) && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app

# Copy application code and set ownership
COPY main.py .
COPY app/ ./app/
RUN chown -R app:app /app

# Switch to app user and install Playwright browsers
USER app
RUN playwright install chromium

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/', timeout=10)"

# Run the application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
